<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
    
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="inversionOfControl" type="EdFi.Common.Configuration.InversionOfControlConfiguration, EdFi.Common, Version=1.0.0.0, Culture=neutral" />
  
  <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 --></configSections>

  <connectionStrings>
    <add name="NHibernatePlaceholder" connectionString="PLACEHOLDER-Required-but-Ignored-By-EdFiOdsConnectionProvider" />
    <add name="EdFi_Ods" connectionString="Database=EdFi_Ods; Data Source=(local); Trusted_Connection=True" providerName="System.Data.SqlClient" />
    <add name="BulkOperationDbContext" connectionString="Data Source=(local);Initial Catalog=EdFi_Bulk;Trusted_Connection=True;MultipleActiveResultSets=True" providerName="System.Data.SqlClient" />
    <add name="UniqueIdIntegrationContext" connectionString="Data Source=(local);Database=UniqueId;Integrated Security=True" providerName="System.Data.SqlClient" />
    <add name="EdFi_Security" connectionString="Data Source=(local);Initial Catalog=EdFi_Security;Integrated Security=True" providerName="System.Data.SqlClient" />
  </connectionStrings>

  <inversionOfControl>
    <installers>
      <add name="Configuration Specific Installer" typeName="EdFi.Ods.BulkLoad.Services.Windows.BulkWorker._Installers.{Configuration}.ConfigurationSpecificInstaller, EdFi.Ods.BulkLoad.Services.Windows.BulkWorker" />
    </installers>
  </inversionOfControl>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <appSettings>
    <add key="IoC.Configuration" value="Sandbox" />
    <add key="QueueAutoCreate" value="1" />
    <add key="StartOperationCommandMessageEndpoint" value="localhost" />
    <add key="DescriptorNamespacePrefix" value="http://www.ed-fi.org" />
    <add key="QueuePrefix" value="EdFiOds" />
  </appSettings>

  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="dialect">NHibernate.Dialect.MsSql2008Dialect</property>
      <property name="connection.provider">EdFi.Ods.Entities.Repositories.NHibernate.Architecture.EdFiOdsConnectionProvider, EdFi.Ods.Entities.Repositories.NHibernate</property>
      <property name="connection.driver_class">NHibernate.Driver.Sql2008ClientDriver</property>
      <!-- TODO: Not Sure We Really Want This as a Default.  This should be getting poked by the deployment, but it doesn't seem to be right now -->
      <property name="connection.connection_string_name">EdFi_Ods</property>
      <property name="connection.isolation">ReadCommitted</property>
      <property name="default_schema">edfi</property>
      <property name="current_session_context_class">call</property>
      <property name="adonet.batch_size">100</property>
      <!-- 
        Disable the hbm2ddl keywords feature.  
         - The keywords feature causes the database to be hit as soon as the session factory is created.
         - If tracing is enabled and a trace listener is added (for instance, in Azure), then controllers are instantiated outside of the request.
         - Since we are calculating connection information based on headers in the request, we have no connection information during trace time, and NHibernate throws an exception.
      -->
      <property name="hbm2ddl.auto">none</property>
      <property name="hbm2ddl.keywords">none</property>
      <!-- HBM Mapping Files -->
      <mapping assembly="EdFi.Ods.Entities.NHibernate.Mappings.SqlServer" />
    </session-factory>
  </hibernate-configuration>

  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="Data Source=.; Integrated Security=True; MultipleActiveResultSets=True" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <log4net>
    <appender name="TraceAppender" type="log4net.Appender.TraceAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <appender name="FileAppender" type="log4net.Appender.FileAppender">
      <file value="${ProgramData}\BulkWorker\EdFi.Ods.BulkLoad.Services.Windows.BulkWorker.Log.txt" />
      <appendToFile value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <root>
      <level value="Error" />
      <appender-ref ref="TraceAppender" />
      <appender-ref ref="FileAppender" />
    </root>

    <logger name="NHibernate">
      <level value="OFF" />
    </logger>
  </log4net>
</configuration>