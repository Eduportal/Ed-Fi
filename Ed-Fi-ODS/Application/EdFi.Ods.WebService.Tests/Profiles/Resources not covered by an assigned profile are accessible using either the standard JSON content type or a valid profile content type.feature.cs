// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34209
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EdFi.Ods.WebService.Tests.Profiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Resources not covered by an assigned profile are accessible using either the stan" +
        "dard JSON content type or a valid profile content type")]
    [NUnit.Framework.CategoryAttribute("API")]
    public partial class ResourcesNotCoveredByAnAssignedProfileAreAccessibleUsingEitherTheStandardJSONContentTypeOrAValidProfileContentTypeFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Resources not covered by an assigned profile are accessible using either the standard JSON content type or a valid profile content type.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Resources not covered by an assigned profile are accessible using either the stan" +
                    "dard JSON content type or a valid profile content type", "", ProgrammingLanguage.CSharp, new string[] {
                        "API"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The caller requests a resource not covered by any of their assigned profiles usin" +
            "g the standard content type")]
        public virtual void TheCallerRequestsAResourceNotCoveredByAnyOfTheirAssignedProfilesUsingTheStandardContentType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The caller requests a resource not covered by any of their assigned profiles usin" +
                    "g the standard content type", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
    testRunner.Given("the caller is assigned the \"Test-Profile-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
    testRunner.And("the caller is assigned the \"Test-Profile-StaffOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
    testRunner.When("a GET (by id) request is submitted to students with an accept header content type" +
                    " of \"application/json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
    testRunner.Then("the response should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The caller requests a resource not covered by their assigned profiles using a val" +
            "id but unassigned profile-specific content type")]
        public virtual void TheCallerRequestsAResourceNotCoveredByTheirAssignedProfilesUsingAValidButUnassignedProfile_SpecificContentType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The caller requests a resource not covered by their assigned profiles using a val" +
                    "id but unassigned profile-specific content type", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
    testRunner.Given("the caller is assigned the \"Test-Profile-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
    testRunner.And("the caller is assigned the \"Test-Profile-StaffOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
    testRunner.And("the caller is using the \"Test-Profile-StudentOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
    testRunner.When("a GET (by id) request is submitted to students with an accept header content type" +
                    " of the appropriate value for the profile in use", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
    testRunner.Then("the response should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The caller updates a resource not covered by any of their assigned profiles using" +
            " the standard content type")]
        public virtual void TheCallerUpdatesAResourceNotCoveredByAnyOfTheirAssignedProfilesUsingTheStandardContentType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The caller updates a resource not covered by any of their assigned profiles using" +
                    " the standard content type", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
    testRunner.Given("the caller is assigned the \"Test-Profile-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
    testRunner.And("the caller is assigned the \"Test-Profile-StaffOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
    testRunner.When("a POST request with a resource is submitted to students with a request body conte" +
                    "nt type of \"application/json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
    testRunner.Then("the response should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The caller updates a resource not covered by any of their assigned profiles using" +
            " a valid but unassigned profile-specific content type")]
        public virtual void TheCallerUpdatesAResourceNotCoveredByAnyOfTheirAssignedProfilesUsingAValidButUnassignedProfile_SpecificContentType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The caller updates a resource not covered by any of their assigned profiles using" +
                    " a valid but unassigned profile-specific content type", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
    testRunner.Given("the caller is assigned the \"Test-Profile-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
    testRunner.And("the caller is assigned the \"Test-Profile-StaffOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
    testRunner.And("the caller is using the \"Test-Profile-StudentOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
    testRunner.When("a POST request with a resource is submitted to students with a request body conte" +
                    "nt type of the appropriate value for the profile in use", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
    testRunner.Then("the response should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
