// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34209
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EdFi.Ods.WebService.Tests.Profiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Profile-specific content type headers in requests are validated to match target r" +
        "esources")]
    [NUnit.Framework.CategoryAttribute("API")]
    public partial class Profile_SpecificContentTypeHeadersInRequestsAreValidatedToMatchTargetResourcesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Profile-specific content type headers in requests are validated to match target resources.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Profile-specific content type headers in requests are validated to match target r" +
                    "esources", "", ProgrammingLanguage.CSharp, new string[] {
                        "API"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GET Request contains an accept header with a content type using a profile that do" +
            "es not include the targeted resource")]
        public virtual void GETRequestContainsAnAcceptHeaderWithAContentTypeUsingAProfileThatDoesNotIncludeTheTargetedResource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GET Request contains an accept header with a content type using a profile that do" +
                    "es not include the targeted resource", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
    testRunner.Given("the caller is using the \"Test-Profile-StaffOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
    testRunner.When("a GET (by id) request is submitted to students with an accept header content type" +
                    " of the appropriate value for the profile in use", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
    testRunner.Then("the response should contain a 400 Bad Request failure indicating that \"the resour" +
                    "ce is not accessible through the profile specified by the content type\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GET Request contains an accept header with a content type using a profile that in" +
            "cludes the targeted resource")]
        public virtual void GETRequestContainsAnAcceptHeaderWithAContentTypeUsingAProfileThatIncludesTheTargetedResource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GET Request contains an accept header with a content type using a profile that in" +
                    "cludes the targeted resource", ((string[])(null)));
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
    testRunner.Given("the caller is using the \"Test-Profile-StudentOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
    testRunner.When("a GET (by id) request is submitted to students with an accept header content type" +
                    " of the appropriate value for the profile in use", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
    testRunner.Then("the response should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GET Request contains a content type header with a resource that does not match th" +
            "e requested resource")]
        public virtual void GETRequestContainsAContentTypeHeaderWithAResourceThatDoesNotMatchTheRequestedResource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GET Request contains a content type header with a resource that does not match th" +
                    "e requested resource", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
    testRunner.Given("the caller is using the \"Test-Profile-StudentOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
    testRunner.When("a GET (by id) request is submitted to students with an accept header content type" +
                    " of \"application/vnd.ed-fi.school.test-profile-studentonly-resource-includeall.r" +
                    "eadable+json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
    testRunner.Then("the response should contain a 400 Bad Request failure indicating that \"the resour" +
                    "ce is not accessible through the profile specified by the content type\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GET Request contains a content type header with a read/write content that does no" +
            "t match the requested resource")]
        public virtual void GETRequestContainsAContentTypeHeaderWithAReadWriteContentThatDoesNotMatchTheRequestedResource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GET Request contains a content type header with a read/write content that does no" +
                    "t match the requested resource", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
    testRunner.Given("the caller is using the \"Test-Profile-StudentOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
    testRunner.When("a GET (by id) request is submitted to students with an accept header content type" +
                    " of \"application/vnd.ed-fi.student.test-profile-studentonly-resource-includeall." +
                    "writable+json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
    testRunner.Then("the response should contain a 400 Bad Request failure indicating that \"the resour" +
                    "ce is not accessible through the profile specified by the content type\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("POST Request contains a content type header using a profile that does not include" +
            " the targeted resource")]
        public virtual void POSTRequestContainsAContentTypeHeaderUsingAProfileThatDoesNotIncludeTheTargetedResource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("POST Request contains a content type header using a profile that does not include" +
                    " the targeted resource", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
    testRunner.Given("the caller is using the \"Test-Profile-StaffOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
    testRunner.When("a POST request with a resource is submitted to students with a request body conte" +
                    "nt type of the appropriate value for the profile in use", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
    testRunner.Then("the response should contain a 400 Bad Request failure indicating that \"the resour" +
                    "ce is not accessible through the profile specified by the content type\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("POST Request contains a content type header using a profile that includes the tar" +
            "geted resource")]
        public virtual void POSTRequestContainsAContentTypeHeaderUsingAProfileThatIncludesTheTargetedResource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("POST Request contains a content type header using a profile that includes the tar" +
                    "geted resource", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
    testRunner.Given("the caller is using the \"Test-Profile-StudentOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
    testRunner.When("a POST request with a resource is submitted to students with a request body conte" +
                    "nt type of the appropriate value for the profile in use", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
    testRunner.Then("the response should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("POST Request contains a content type header with a resource that does not match t" +
            "he requested resource")]
        public virtual void POSTRequestContainsAContentTypeHeaderWithAResourceThatDoesNotMatchTheRequestedResource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("POST Request contains a content type header with a resource that does not match t" +
                    "he requested resource", ((string[])(null)));
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
 testRunner.Given("the caller is using the \"Test-Profile-StudentOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
    testRunner.When("a POST request with a resource is submitted to students with a request body conte" +
                    "nt type of \"application/vnd.ed-fi.school.test-profile-studentonly-resource-inclu" +
                    "deall.writable+json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
    testRunner.Then("the response should contain a 400 Bad Request failure indicating that \"the resour" +
                    "ce is not accessible through the profile specified by the content type\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("POST\t Request contains a content type header with a read/write content that does " +
            "not match the requested resource")]
        public virtual void POSTRequestContainsAContentTypeHeaderWithAReadWriteContentThatDoesNotMatchTheRequestedResource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("POST\t Request contains a content type header with a read/write content that does " +
                    "not match the requested resource", ((string[])(null)));
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given("the caller is using the \"Test-Profile-StudentOnly-Resource-IncludeAll\" profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
    testRunner.When("a POST request with a resource is submitted to students with a request body conte" +
                    "nt type of \"application/vnd.ed-fi.student.test-profile-studentonly-resource-incl" +
                    "udeall.readable+json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
    testRunner.Then("the response should contain a 400 Bad Request failure indicating that \"the resour" +
                    "ce is not accessible through the profile specified by the content type\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
