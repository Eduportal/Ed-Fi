<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ include file="..\ttInclude\Metadata.ttinclude"#>
<#@ output extension=".generated.cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in the application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace EdFi.Ods.CodeGen
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public static class AggregateLoadOrder {
        public static List<Tuple<string, IEnumerable<string>>> Metadata = new List<Tuple<string, IEnumerable<string>>> {
<#
    var interchanges = GetReplacedXmlDocument(Host, "InterchangeOrderMetadata.xml").Element("Interchanges");
    foreach (var interchange in interchanges.Elements()) {
        var interchangeName = interchange.Attribute("name").Value;
#>
            new Tuple<string, IEnumerable<string>> ( "<#=interchangeName#>", new List<string> { <#
        foreach (var ele in interchange.Elements())
        {
            var elementName = ele.Attribute("name").Value;
#>"<#=elementName#>", <#
        }
#>} ),
<#    
    }
#>
        };  
                  
        public static IEnumerable<string> GetMetadata(string interchangeName)
        {
            return Metadata.FirstOrDefault(x => x.Item1.Equals(interchangeName)).Item2; 
        }
    }
}